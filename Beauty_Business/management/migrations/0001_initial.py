# Generated by Django 4.1 on 2023-02-25 01:48

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('category_id', models.AutoField(primary_key=True, serialize=False)),
                ('name_category', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'category',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Mark',
            fields=[
                ('mark_id', models.AutoField(primary_key=True, serialize=False)),
                ('name_mark', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'mark',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('product_id', models.AutoField(primary_key=True, serialize=False)),
                ('name_product', models.CharField(max_length=30)),
                ('category_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.category')),
                ('mark_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.mark')),
            ],
            options={
                'db_table': 'products',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Providers',
            fields=[
                ('provider_id', models.AutoField(primary_key=True, serialize=False)),
                ('provider_name', models.CharField(max_length=30)),
                ('phone', models.CharField(max_length=25)),
                ('provider_address', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'providers',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Purchases',
            fields=[
                ('purchase_id', models.AutoField(primary_key=True, serialize=False)),
                ('purchase_date', models.DateField()),
                ('factura', models.CharField(max_length=10)),
                ('provider_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.providers')),
            ],
            options={
                'db_table': 'purchases',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('stock_id', models.AutoField(primary_key=True, serialize=False)),
                ('purchase_price', models.IntegerField()),
                ('sales_price', models.IntegerField()),
                ('total', models.IntegerField()),
                ('amount', models.IntegerField()),
                ('sales_st', models.IntegerField(blank=True, null=True)),
                ('product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.products')),
                ('purchase_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.purchases')),
            ],
            options={
                'db_table': 'stock',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Sales',
            fields=[
                ('sale_id', models.AutoField(primary_key=True, serialize=False)),
                ('sale_date', models.DateField(auto_now_add=True)),
                ('amount', models.IntegerField()),
                ('price', models.IntegerField()),
                ('product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.products')),
                ('stock_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='management.stock')),
            ],
            options={
                'db_table': 'sales',
                'managed': True,
            },
        ),
    ]
